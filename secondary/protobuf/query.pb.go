// Code generated by protoc-gen-go.
// source: query.proto
// DO NOT EDIT!

package protobuf

import proto "github.com/couchbaselabs/goprotobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

// Request can be one of the optional field.
type QueryPayload struct {
	Version           *uint32             `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	StatisticsRequest *StatisticsRequest  `protobuf:"bytes,2,opt,name=statisticsRequest" json:"statisticsRequest,omitempty"`
	ScanRequest       *ScanRequest        `protobuf:"bytes,3,opt,name=scanRequest" json:"scanRequest,omitempty"`
	ScanAllRequest    *ScanAllRequest     `protobuf:"bytes,4,opt,name=scanAllRequest" json:"scanAllRequest,omitempty"`
	EndStream         *EndStreamRequest   `protobuf:"bytes,5,opt,name=endStream" json:"endStream,omitempty"`
	Statistics        *StatisticsResponse `protobuf:"bytes,6,opt,name=statistics" json:"statistics,omitempty"`
	Stream            *ResponseStream     `protobuf:"bytes,7,opt,name=stream" json:"stream,omitempty"`
	StreamEnd         *StreamEndResponse  `protobuf:"bytes,8,opt,name=streamEnd" json:"streamEnd,omitempty"`
	XXX_unrecognized  []byte              `json:"-"`
}

func (m *QueryPayload) Reset()         { *m = QueryPayload{} }
func (m *QueryPayload) String() string { return proto.CompactTextString(m) }
func (*QueryPayload) ProtoMessage()    {}

func (m *QueryPayload) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *QueryPayload) GetStatisticsRequest() *StatisticsRequest {
	if m != nil {
		return m.StatisticsRequest
	}
	return nil
}

func (m *QueryPayload) GetScanRequest() *ScanRequest {
	if m != nil {
		return m.ScanRequest
	}
	return nil
}

func (m *QueryPayload) GetScanAllRequest() *ScanAllRequest {
	if m != nil {
		return m.ScanAllRequest
	}
	return nil
}

func (m *QueryPayload) GetEndStream() *EndStreamRequest {
	if m != nil {
		return m.EndStream
	}
	return nil
}

func (m *QueryPayload) GetStatistics() *StatisticsResponse {
	if m != nil {
		return m.Statistics
	}
	return nil
}

func (m *QueryPayload) GetStream() *ResponseStream {
	if m != nil {
		return m.Stream
	}
	return nil
}

func (m *QueryPayload) GetStreamEnd() *StreamEndResponse {
	if m != nil {
		return m.StreamEnd
	}
	return nil
}

// Get Index statistics. StatisticsResponse is returned back from indexer.
type StatisticsRequest struct {
	Span             *Span   `protobuf:"bytes,1,req,name=span" json:"span,omitempty"`
	IndexName        *string `protobuf:"bytes,3,req,name=indexName" json:"indexName,omitempty"`
	Bucket           *string `protobuf:"bytes,4,req,name=bucket" json:"bucket,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *StatisticsRequest) Reset()         { *m = StatisticsRequest{} }
func (m *StatisticsRequest) String() string { return proto.CompactTextString(m) }
func (*StatisticsRequest) ProtoMessage()    {}

func (m *StatisticsRequest) GetSpan() *Span {
	if m != nil {
		return m.Span
	}
	return nil
}

func (m *StatisticsRequest) GetIndexName() string {
	if m != nil && m.IndexName != nil {
		return *m.IndexName
	}
	return ""
}

func (m *StatisticsRequest) GetBucket() string {
	if m != nil && m.Bucket != nil {
		return *m.Bucket
	}
	return ""
}

type StatisticsResponse struct {
	Stats            *IndexStatistics `protobuf:"bytes,1,req,name=stats" json:"stats,omitempty"`
	Err              *Error           `protobuf:"bytes,2,opt,name=err" json:"err,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *StatisticsResponse) Reset()         { *m = StatisticsResponse{} }
func (m *StatisticsResponse) String() string { return proto.CompactTextString(m) }
func (*StatisticsResponse) ProtoMessage()    {}

func (m *StatisticsResponse) GetStats() *IndexStatistics {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *StatisticsResponse) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

// Scan request to indexer.
type ScanRequest struct {
	Span             *Span   `protobuf:"bytes,1,req,name=span" json:"span,omitempty"`
	Distinct         *bool   `protobuf:"varint,2,req,name=distinct" json:"distinct,omitempty"`
	Limit            *int64  `protobuf:"varint,3,req,name=limit" json:"limit,omitempty"`
	PageSize         *int64  `protobuf:"varint,4,req,name=pageSize" json:"pageSize,omitempty"`
	IndexName        *string `protobuf:"bytes,5,req,name=indexName" json:"indexName,omitempty"`
	Bucket           *string `protobuf:"bytes,6,req,name=bucket" json:"bucket,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ScanRequest) Reset()         { *m = ScanRequest{} }
func (m *ScanRequest) String() string { return proto.CompactTextString(m) }
func (*ScanRequest) ProtoMessage()    {}

func (m *ScanRequest) GetSpan() *Span {
	if m != nil {
		return m.Span
	}
	return nil
}

func (m *ScanRequest) GetDistinct() bool {
	if m != nil && m.Distinct != nil {
		return *m.Distinct
	}
	return false
}

func (m *ScanRequest) GetLimit() int64 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *ScanRequest) GetPageSize() int64 {
	if m != nil && m.PageSize != nil {
		return *m.PageSize
	}
	return 0
}

func (m *ScanRequest) GetIndexName() string {
	if m != nil && m.IndexName != nil {
		return *m.IndexName
	}
	return ""
}

func (m *ScanRequest) GetBucket() string {
	if m != nil && m.Bucket != nil {
		return *m.Bucket
	}
	return ""
}

// Full table scan request from indexer.
type ScanAllRequest struct {
	PageSize         *int64  `protobuf:"varint,1,req,name=pageSize" json:"pageSize,omitempty"`
	Limit            *int64  `protobuf:"varint,2,req,name=limit" json:"limit,omitempty"`
	IndexName        *string `protobuf:"bytes,3,req,name=indexName" json:"indexName,omitempty"`
	Bucket           *string `protobuf:"bytes,4,req,name=bucket" json:"bucket,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ScanAllRequest) Reset()         { *m = ScanAllRequest{} }
func (m *ScanAllRequest) String() string { return proto.CompactTextString(m) }
func (*ScanAllRequest) ProtoMessage()    {}

func (m *ScanAllRequest) GetPageSize() int64 {
	if m != nil && m.PageSize != nil {
		return *m.PageSize
	}
	return 0
}

func (m *ScanAllRequest) GetLimit() int64 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *ScanAllRequest) GetIndexName() string {
	if m != nil && m.IndexName != nil {
		return *m.IndexName
	}
	return ""
}

func (m *ScanAllRequest) GetBucket() string {
	if m != nil && m.Bucket != nil {
		return *m.Bucket
	}
	return ""
}

// Request by client to stop streaming the query results.
type EndStreamRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *EndStreamRequest) Reset()         { *m = EndStreamRequest{} }
func (m *EndStreamRequest) String() string { return proto.CompactTextString(m) }
func (*EndStreamRequest) ProtoMessage()    {}

type ResponseStream struct {
	Entries          []*IndexEntry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
	Err              *Error        `protobuf:"bytes,2,opt,name=err" json:"err,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *ResponseStream) Reset()         { *m = ResponseStream{} }
func (m *ResponseStream) String() string { return proto.CompactTextString(m) }
func (*ResponseStream) ProtoMessage()    {}

func (m *ResponseStream) GetEntries() []*IndexEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *ResponseStream) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

// Last response packet sent by server to end query results.
type StreamEndResponse struct {
	Err              *Error `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *StreamEndResponse) Reset()         { *m = StreamEndResponse{} }
func (m *StreamEndResponse) String() string { return proto.CompactTextString(m) }
func (*StreamEndResponse) ProtoMessage()    {}

func (m *StreamEndResponse) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

type Span struct {
	Range            *Range   `protobuf:"bytes,1,req,name=range" json:"range,omitempty"`
	Equal            []string `protobuf:"bytes,2,rep,name=equal" json:"equal,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Span) Reset()         { *m = Span{} }
func (m *Span) String() string { return proto.CompactTextString(m) }
func (*Span) ProtoMessage()    {}

func (m *Span) GetRange() *Range {
	if m != nil {
		return m.Range
	}
	return nil
}

func (m *Span) GetEqual() []string {
	if m != nil {
		return m.Equal
	}
	return nil
}

type Range struct {
	Low              []byte  `protobuf:"bytes,1,req,name=low" json:"low,omitempty"`
	High             []byte  `protobuf:"bytes,2,req,name=high" json:"high,omitempty"`
	Inclusion        *uint32 `protobuf:"varint,3,req,name=inclusion" json:"inclusion,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Range) Reset()         { *m = Range{} }
func (m *Range) String() string { return proto.CompactTextString(m) }
func (*Range) ProtoMessage()    {}

func (m *Range) GetLow() []byte {
	if m != nil {
		return m.Low
	}
	return nil
}

func (m *Range) GetHigh() []byte {
	if m != nil {
		return m.High
	}
	return nil
}

func (m *Range) GetInclusion() uint32 {
	if m != nil && m.Inclusion != nil {
		return *m.Inclusion
	}
	return 0
}

type IndexEntry struct {
	EntryKey         []byte `protobuf:"bytes,1,req,name=entryKey" json:"entryKey,omitempty"`
	PrimaryKey       []byte `protobuf:"bytes,2,req,name=primaryKey" json:"primaryKey,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *IndexEntry) Reset()         { *m = IndexEntry{} }
func (m *IndexEntry) String() string { return proto.CompactTextString(m) }
func (*IndexEntry) ProtoMessage()    {}

func (m *IndexEntry) GetEntryKey() []byte {
	if m != nil {
		return m.EntryKey
	}
	return nil
}

func (m *IndexEntry) GetPrimaryKey() []byte {
	if m != nil {
		return m.PrimaryKey
	}
	return nil
}

func init() {
}
